name: Web Create Release
on:
  workflow_dispatch:

jobs:
  create-release:
    environment: web
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      # setup
      - name: Setup pnpm
        uses: pnpm/action-setup@41ff72655975bd51cab0327fa583b6e92b6d3061 # v4
      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version-file: ".node-version"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # build
      - name: Create .env file
        run: |
          echo "PUBLIC_REPORT_BUG_URL=${{ vars.PUBLIC_REPORT_BUG_URL }}" > packages/web/.env
          echo "PUBLIC_REPORT_REQUEST_URL=${{ vars.PUBLIC_REPORT_REQUEST_URL }}" >> packages/web/.env
          echo "PUBLIC_LOG_LEVEL=${{ vars.PUBLIC_LOG_LEVEL }}" >> packages/web/.env
      - name: Build
        run: pnpm run build

      # deploy
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@da0e0dfe58b7a431659754fdf3f186c529afbe65 # v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy packages/web/dist --project-name=ac6-assemble-tool --commit-dirty=true

      # create release
      - name: Get version from package.json
        id: version
        run: |
          VERSION=$(jq -r '.version' packages/web/package.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create tag
        run: |
          git tag "web/v${{ steps.version.outputs.version }}"
          git push origin "web/v${{ steps.version.outputs.version }}"

      - name: Release
        uses: softprops/action-gh-release@aec2ec56f94eb8180ceec724245f64ef008b89f5 # v2
        with:
          tag_name: "web/v${{ steps.version.outputs.version }}"
          generate_release_notes: true
